// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_agent_data.proto

#ifndef PROTOBUF_server_5fagent_5fdata_2eproto__INCLUDED
#define PROTOBUF_server_5fagent_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_server_5fagent_5fdata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsInstanceImpl();
void InitDefaultsInstance();
void InitDefaultsSvrAgentDataImpl();
void InitDefaultsSvrAgentData();
void InitDefaultsExecuteCommandReqImpl();
void InitDefaultsExecuteCommandReq();
void InitDefaultsExecuteCommandRspImpl();
void InitDefaultsExecuteCommandRsp();
inline void InitDefaults() {
  InitDefaultsInstance();
  InitDefaultsSvrAgentData();
  InitDefaultsExecuteCommandReq();
  InitDefaultsExecuteCommandRsp();
}
}  // namespace protobuf_server_5fagent_5fdata_2eproto
namespace agent {
class ExecuteCommandReq;
class ExecuteCommandReqDefaultTypeInternal;
extern ExecuteCommandReqDefaultTypeInternal _ExecuteCommandReq_default_instance_;
class ExecuteCommandRsp;
class ExecuteCommandRspDefaultTypeInternal;
extern ExecuteCommandRspDefaultTypeInternal _ExecuteCommandRsp_default_instance_;
class Instance;
class InstanceDefaultTypeInternal;
extern InstanceDefaultTypeInternal _Instance_default_instance_;
class SvrAgentData;
class SvrAgentDataDefaultTypeInternal;
extern SvrAgentDataDefaultTypeInternal _SvrAgentData_default_instance_;
}  // namespace agent
namespace agent {

enum CMD {
  CMD_EXECUTE_OMMAND_REQ = 256,
  CMD_EXECUTE_OMMAND_RSP = 257
};
bool CMD_IsValid(int value);
const CMD CMD_MIN = CMD_EXECUTE_OMMAND_REQ;
const CMD CMD_MAX = CMD_EXECUTE_OMMAND_RSP;
const int CMD_ARRAYSIZE = CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMD_descriptor();
inline const ::std::string& CMD_Name(CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMD_descriptor(), value);
}
inline bool CMD_Parse(
    const ::std::string& name, CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMD>(
    CMD_descriptor(), name, value);
}
// ===================================================================

class Instance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agent.Instance) */ {
 public:
  Instance();
  virtual ~Instance();

  Instance(const Instance& from);

  inline Instance& operator=(const Instance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Instance(Instance&& from) noexcept
    : Instance() {
    *this = ::std::move(from);
  }

  inline Instance& operator=(Instance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Instance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Instance* internal_default_instance() {
    return reinterpret_cast<const Instance*>(
               &_Instance_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Instance* other);
  friend void swap(Instance& a, Instance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Instance* New() const PROTOBUF_FINAL { return New(NULL); }

  Instance* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Instance& from);
  void MergeFrom(const Instance& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Instance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string inst_name = 1;
  bool has_inst_name() const;
  void clear_inst_name();
  static const int kInstNameFieldNumber = 1;
  const ::std::string& inst_name() const;
  void set_inst_name(const ::std::string& value);
  #if LANG_CXX11
  void set_inst_name(::std::string&& value);
  #endif
  void set_inst_name(const char* value);
  void set_inst_name(const char* value, size_t size);
  ::std::string* mutable_inst_name();
  ::std::string* release_inst_name();
  void set_allocated_inst_name(::std::string* inst_name);

  // optional string start_cmd = 2;
  bool has_start_cmd() const;
  void clear_start_cmd();
  static const int kStartCmdFieldNumber = 2;
  const ::std::string& start_cmd() const;
  void set_start_cmd(const ::std::string& value);
  #if LANG_CXX11
  void set_start_cmd(::std::string&& value);
  #endif
  void set_start_cmd(const char* value);
  void set_start_cmd(const char* value, size_t size);
  ::std::string* mutable_start_cmd();
  ::std::string* release_start_cmd();
  void set_allocated_start_cmd(::std::string* start_cmd);

  // optional string stop_cmd = 3;
  bool has_stop_cmd() const;
  void clear_stop_cmd();
  static const int kStopCmdFieldNumber = 3;
  const ::std::string& stop_cmd() const;
  void set_stop_cmd(const ::std::string& value);
  #if LANG_CXX11
  void set_stop_cmd(::std::string&& value);
  #endif
  void set_stop_cmd(const char* value);
  void set_stop_cmd(const char* value, size_t size);
  ::std::string* mutable_stop_cmd();
  ::std::string* release_stop_cmd();
  void set_allocated_stop_cmd(::std::string* stop_cmd);

  // optional string clean_cmd = 4;
  bool has_clean_cmd() const;
  void clear_clean_cmd();
  static const int kCleanCmdFieldNumber = 4;
  const ::std::string& clean_cmd() const;
  void set_clean_cmd(const ::std::string& value);
  #if LANG_CXX11
  void set_clean_cmd(::std::string&& value);
  #endif
  void set_clean_cmd(const char* value);
  void set_clean_cmd(const char* value, size_t size);
  ::std::string* mutable_clean_cmd();
  ::std::string* release_clean_cmd();
  void set_allocated_clean_cmd(::std::string* clean_cmd);

  // optional string check_cmd = 5;
  bool has_check_cmd() const;
  void clear_check_cmd();
  static const int kCheckCmdFieldNumber = 5;
  const ::std::string& check_cmd() const;
  void set_check_cmd(const ::std::string& value);
  #if LANG_CXX11
  void set_check_cmd(::std::string&& value);
  #endif
  void set_check_cmd(const char* value);
  void set_check_cmd(const char* value, size_t size);
  ::std::string* mutable_check_cmd();
  ::std::string* release_check_cmd();
  void set_allocated_check_cmd(::std::string* check_cmd);

  // optional int32 check_cnt = 6;
  bool has_check_cnt() const;
  void clear_check_cnt();
  static const int kCheckCntFieldNumber = 6;
  ::google::protobuf::int32 check_cnt() const;
  void set_check_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:agent.Instance)
 private:
  void set_has_inst_name();
  void clear_has_inst_name();
  void set_has_start_cmd();
  void clear_has_start_cmd();
  void set_has_stop_cmd();
  void clear_has_stop_cmd();
  void set_has_clean_cmd();
  void clear_has_clean_cmd();
  void set_has_check_cmd();
  void clear_has_check_cmd();
  void set_has_check_cnt();
  void clear_has_check_cnt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr inst_name_;
  ::google::protobuf::internal::ArenaStringPtr start_cmd_;
  ::google::protobuf::internal::ArenaStringPtr stop_cmd_;
  ::google::protobuf::internal::ArenaStringPtr clean_cmd_;
  ::google::protobuf::internal::ArenaStringPtr check_cmd_;
  ::google::protobuf::int32 check_cnt_;
  friend struct ::protobuf_server_5fagent_5fdata_2eproto::TableStruct;
  friend void ::protobuf_server_5fagent_5fdata_2eproto::InitDefaultsInstanceImpl();
};
// -------------------------------------------------------------------

class SvrAgentData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agent.SvrAgentData) */ {
 public:
  SvrAgentData();
  virtual ~SvrAgentData();

  SvrAgentData(const SvrAgentData& from);

  inline SvrAgentData& operator=(const SvrAgentData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SvrAgentData(SvrAgentData&& from) noexcept
    : SvrAgentData() {
    *this = ::std::move(from);
  }

  inline SvrAgentData& operator=(SvrAgentData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SvrAgentData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SvrAgentData* internal_default_instance() {
    return reinterpret_cast<const SvrAgentData*>(
               &_SvrAgentData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(SvrAgentData* other);
  friend void swap(SvrAgentData& a, SvrAgentData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SvrAgentData* New() const PROTOBUF_FINAL { return New(NULL); }

  SvrAgentData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SvrAgentData& from);
  void MergeFrom(const SvrAgentData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SvrAgentData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .agent.Instance instance_list = 1;
  int instance_list_size() const;
  void clear_instance_list();
  static const int kInstanceListFieldNumber = 1;
  const ::agent::Instance& instance_list(int index) const;
  ::agent::Instance* mutable_instance_list(int index);
  ::agent::Instance* add_instance_list();
  ::google::protobuf::RepeatedPtrField< ::agent::Instance >*
      mutable_instance_list();
  const ::google::protobuf::RepeatedPtrField< ::agent::Instance >&
      instance_list() const;

  // @@protoc_insertion_point(class_scope:agent.SvrAgentData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::agent::Instance > instance_list_;
  friend struct ::protobuf_server_5fagent_5fdata_2eproto::TableStruct;
  friend void ::protobuf_server_5fagent_5fdata_2eproto::InitDefaultsSvrAgentDataImpl();
};
// -------------------------------------------------------------------

class ExecuteCommandReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agent.ExecuteCommandReq) */ {
 public:
  ExecuteCommandReq();
  virtual ~ExecuteCommandReq();

  ExecuteCommandReq(const ExecuteCommandReq& from);

  inline ExecuteCommandReq& operator=(const ExecuteCommandReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteCommandReq(ExecuteCommandReq&& from) noexcept
    : ExecuteCommandReq() {
    *this = ::std::move(from);
  }

  inline ExecuteCommandReq& operator=(ExecuteCommandReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteCommandReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteCommandReq* internal_default_instance() {
    return reinterpret_cast<const ExecuteCommandReq*>(
               &_ExecuteCommandReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ExecuteCommandReq* other);
  friend void swap(ExecuteCommandReq& a, ExecuteCommandReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteCommandReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ExecuteCommandReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteCommandReq& from);
  void MergeFrom(const ExecuteCommandReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteCommandReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string cur_cmd = 2;
  bool has_cur_cmd() const;
  void clear_cur_cmd();
  static const int kCurCmdFieldNumber = 2;
  const ::std::string& cur_cmd() const;
  void set_cur_cmd(const ::std::string& value);
  #if LANG_CXX11
  void set_cur_cmd(::std::string&& value);
  #endif
  void set_cur_cmd(const char* value);
  void set_cur_cmd(const char* value, size_t size);
  ::std::string* mutable_cur_cmd();
  ::std::string* release_cur_cmd();
  void set_allocated_cur_cmd(::std::string* cur_cmd);

  // optional .agent.Instance instance = 1;
  bool has_instance() const;
  void clear_instance();
  static const int kInstanceFieldNumber = 1;
  const ::agent::Instance& instance() const;
  ::agent::Instance* release_instance();
  ::agent::Instance* mutable_instance();
  void set_allocated_instance(::agent::Instance* instance);

  // @@protoc_insertion_point(class_scope:agent.ExecuteCommandReq)
 private:
  void set_has_instance();
  void clear_has_instance();
  void set_has_cur_cmd();
  void clear_has_cur_cmd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cur_cmd_;
  ::agent::Instance* instance_;
  friend struct ::protobuf_server_5fagent_5fdata_2eproto::TableStruct;
  friend void ::protobuf_server_5fagent_5fdata_2eproto::InitDefaultsExecuteCommandReqImpl();
};
// -------------------------------------------------------------------

class ExecuteCommandRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agent.ExecuteCommandRsp) */ {
 public:
  ExecuteCommandRsp();
  virtual ~ExecuteCommandRsp();

  ExecuteCommandRsp(const ExecuteCommandRsp& from);

  inline ExecuteCommandRsp& operator=(const ExecuteCommandRsp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecuteCommandRsp(ExecuteCommandRsp&& from) noexcept
    : ExecuteCommandRsp() {
    *this = ::std::move(from);
  }

  inline ExecuteCommandRsp& operator=(ExecuteCommandRsp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecuteCommandRsp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecuteCommandRsp* internal_default_instance() {
    return reinterpret_cast<const ExecuteCommandRsp*>(
               &_ExecuteCommandRsp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ExecuteCommandRsp* other);
  friend void swap(ExecuteCommandRsp& a, ExecuteCommandRsp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecuteCommandRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ExecuteCommandRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExecuteCommandRsp& from);
  void MergeFrom(const ExecuteCommandRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExecuteCommandRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 ret = 1;
  bool has_ret() const;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:agent.ExecuteCommandRsp)
 private:
  void set_has_ret();
  void clear_has_ret();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 ret_;
  friend struct ::protobuf_server_5fagent_5fdata_2eproto::TableStruct;
  friend void ::protobuf_server_5fagent_5fdata_2eproto::InitDefaultsExecuteCommandRspImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Instance

// optional string inst_name = 1;
inline bool Instance::has_inst_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Instance::set_has_inst_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Instance::clear_has_inst_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Instance::clear_inst_name() {
  inst_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_inst_name();
}
inline const ::std::string& Instance::inst_name() const {
  // @@protoc_insertion_point(field_get:agent.Instance.inst_name)
  return inst_name_.GetNoArena();
}
inline void Instance::set_inst_name(const ::std::string& value) {
  set_has_inst_name();
  inst_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent.Instance.inst_name)
}
#if LANG_CXX11
inline void Instance::set_inst_name(::std::string&& value) {
  set_has_inst_name();
  inst_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:agent.Instance.inst_name)
}
#endif
inline void Instance::set_inst_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_inst_name();
  inst_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent.Instance.inst_name)
}
inline void Instance::set_inst_name(const char* value, size_t size) {
  set_has_inst_name();
  inst_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent.Instance.inst_name)
}
inline ::std::string* Instance::mutable_inst_name() {
  set_has_inst_name();
  // @@protoc_insertion_point(field_mutable:agent.Instance.inst_name)
  return inst_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Instance::release_inst_name() {
  // @@protoc_insertion_point(field_release:agent.Instance.inst_name)
  clear_has_inst_name();
  return inst_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Instance::set_allocated_inst_name(::std::string* inst_name) {
  if (inst_name != NULL) {
    set_has_inst_name();
  } else {
    clear_has_inst_name();
  }
  inst_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inst_name);
  // @@protoc_insertion_point(field_set_allocated:agent.Instance.inst_name)
}

// optional string start_cmd = 2;
inline bool Instance::has_start_cmd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Instance::set_has_start_cmd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Instance::clear_has_start_cmd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Instance::clear_start_cmd() {
  start_cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_start_cmd();
}
inline const ::std::string& Instance::start_cmd() const {
  // @@protoc_insertion_point(field_get:agent.Instance.start_cmd)
  return start_cmd_.GetNoArena();
}
inline void Instance::set_start_cmd(const ::std::string& value) {
  set_has_start_cmd();
  start_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent.Instance.start_cmd)
}
#if LANG_CXX11
inline void Instance::set_start_cmd(::std::string&& value) {
  set_has_start_cmd();
  start_cmd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:agent.Instance.start_cmd)
}
#endif
inline void Instance::set_start_cmd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_start_cmd();
  start_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent.Instance.start_cmd)
}
inline void Instance::set_start_cmd(const char* value, size_t size) {
  set_has_start_cmd();
  start_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent.Instance.start_cmd)
}
inline ::std::string* Instance::mutable_start_cmd() {
  set_has_start_cmd();
  // @@protoc_insertion_point(field_mutable:agent.Instance.start_cmd)
  return start_cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Instance::release_start_cmd() {
  // @@protoc_insertion_point(field_release:agent.Instance.start_cmd)
  clear_has_start_cmd();
  return start_cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Instance::set_allocated_start_cmd(::std::string* start_cmd) {
  if (start_cmd != NULL) {
    set_has_start_cmd();
  } else {
    clear_has_start_cmd();
  }
  start_cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_cmd);
  // @@protoc_insertion_point(field_set_allocated:agent.Instance.start_cmd)
}

// optional string stop_cmd = 3;
inline bool Instance::has_stop_cmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Instance::set_has_stop_cmd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Instance::clear_has_stop_cmd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Instance::clear_stop_cmd() {
  stop_cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stop_cmd();
}
inline const ::std::string& Instance::stop_cmd() const {
  // @@protoc_insertion_point(field_get:agent.Instance.stop_cmd)
  return stop_cmd_.GetNoArena();
}
inline void Instance::set_stop_cmd(const ::std::string& value) {
  set_has_stop_cmd();
  stop_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent.Instance.stop_cmd)
}
#if LANG_CXX11
inline void Instance::set_stop_cmd(::std::string&& value) {
  set_has_stop_cmd();
  stop_cmd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:agent.Instance.stop_cmd)
}
#endif
inline void Instance::set_stop_cmd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_stop_cmd();
  stop_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent.Instance.stop_cmd)
}
inline void Instance::set_stop_cmd(const char* value, size_t size) {
  set_has_stop_cmd();
  stop_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent.Instance.stop_cmd)
}
inline ::std::string* Instance::mutable_stop_cmd() {
  set_has_stop_cmd();
  // @@protoc_insertion_point(field_mutable:agent.Instance.stop_cmd)
  return stop_cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Instance::release_stop_cmd() {
  // @@protoc_insertion_point(field_release:agent.Instance.stop_cmd)
  clear_has_stop_cmd();
  return stop_cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Instance::set_allocated_stop_cmd(::std::string* stop_cmd) {
  if (stop_cmd != NULL) {
    set_has_stop_cmd();
  } else {
    clear_has_stop_cmd();
  }
  stop_cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stop_cmd);
  // @@protoc_insertion_point(field_set_allocated:agent.Instance.stop_cmd)
}

// optional string clean_cmd = 4;
inline bool Instance::has_clean_cmd() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Instance::set_has_clean_cmd() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Instance::clear_has_clean_cmd() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Instance::clear_clean_cmd() {
  clean_cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clean_cmd();
}
inline const ::std::string& Instance::clean_cmd() const {
  // @@protoc_insertion_point(field_get:agent.Instance.clean_cmd)
  return clean_cmd_.GetNoArena();
}
inline void Instance::set_clean_cmd(const ::std::string& value) {
  set_has_clean_cmd();
  clean_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent.Instance.clean_cmd)
}
#if LANG_CXX11
inline void Instance::set_clean_cmd(::std::string&& value) {
  set_has_clean_cmd();
  clean_cmd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:agent.Instance.clean_cmd)
}
#endif
inline void Instance::set_clean_cmd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clean_cmd();
  clean_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent.Instance.clean_cmd)
}
inline void Instance::set_clean_cmd(const char* value, size_t size) {
  set_has_clean_cmd();
  clean_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent.Instance.clean_cmd)
}
inline ::std::string* Instance::mutable_clean_cmd() {
  set_has_clean_cmd();
  // @@protoc_insertion_point(field_mutable:agent.Instance.clean_cmd)
  return clean_cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Instance::release_clean_cmd() {
  // @@protoc_insertion_point(field_release:agent.Instance.clean_cmd)
  clear_has_clean_cmd();
  return clean_cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Instance::set_allocated_clean_cmd(::std::string* clean_cmd) {
  if (clean_cmd != NULL) {
    set_has_clean_cmd();
  } else {
    clear_has_clean_cmd();
  }
  clean_cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clean_cmd);
  // @@protoc_insertion_point(field_set_allocated:agent.Instance.clean_cmd)
}

// optional string check_cmd = 5;
inline bool Instance::has_check_cmd() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Instance::set_has_check_cmd() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Instance::clear_has_check_cmd() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Instance::clear_check_cmd() {
  check_cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_check_cmd();
}
inline const ::std::string& Instance::check_cmd() const {
  // @@protoc_insertion_point(field_get:agent.Instance.check_cmd)
  return check_cmd_.GetNoArena();
}
inline void Instance::set_check_cmd(const ::std::string& value) {
  set_has_check_cmd();
  check_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent.Instance.check_cmd)
}
#if LANG_CXX11
inline void Instance::set_check_cmd(::std::string&& value) {
  set_has_check_cmd();
  check_cmd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:agent.Instance.check_cmd)
}
#endif
inline void Instance::set_check_cmd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_check_cmd();
  check_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent.Instance.check_cmd)
}
inline void Instance::set_check_cmd(const char* value, size_t size) {
  set_has_check_cmd();
  check_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent.Instance.check_cmd)
}
inline ::std::string* Instance::mutable_check_cmd() {
  set_has_check_cmd();
  // @@protoc_insertion_point(field_mutable:agent.Instance.check_cmd)
  return check_cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Instance::release_check_cmd() {
  // @@protoc_insertion_point(field_release:agent.Instance.check_cmd)
  clear_has_check_cmd();
  return check_cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Instance::set_allocated_check_cmd(::std::string* check_cmd) {
  if (check_cmd != NULL) {
    set_has_check_cmd();
  } else {
    clear_has_check_cmd();
  }
  check_cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), check_cmd);
  // @@protoc_insertion_point(field_set_allocated:agent.Instance.check_cmd)
}

// optional int32 check_cnt = 6;
inline bool Instance::has_check_cnt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Instance::set_has_check_cnt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Instance::clear_has_check_cnt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Instance::clear_check_cnt() {
  check_cnt_ = 0;
  clear_has_check_cnt();
}
inline ::google::protobuf::int32 Instance::check_cnt() const {
  // @@protoc_insertion_point(field_get:agent.Instance.check_cnt)
  return check_cnt_;
}
inline void Instance::set_check_cnt(::google::protobuf::int32 value) {
  set_has_check_cnt();
  check_cnt_ = value;
  // @@protoc_insertion_point(field_set:agent.Instance.check_cnt)
}

// -------------------------------------------------------------------

// SvrAgentData

// repeated .agent.Instance instance_list = 1;
inline int SvrAgentData::instance_list_size() const {
  return instance_list_.size();
}
inline void SvrAgentData::clear_instance_list() {
  instance_list_.Clear();
}
inline const ::agent::Instance& SvrAgentData::instance_list(int index) const {
  // @@protoc_insertion_point(field_get:agent.SvrAgentData.instance_list)
  return instance_list_.Get(index);
}
inline ::agent::Instance* SvrAgentData::mutable_instance_list(int index) {
  // @@protoc_insertion_point(field_mutable:agent.SvrAgentData.instance_list)
  return instance_list_.Mutable(index);
}
inline ::agent::Instance* SvrAgentData::add_instance_list() {
  // @@protoc_insertion_point(field_add:agent.SvrAgentData.instance_list)
  return instance_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::agent::Instance >*
SvrAgentData::mutable_instance_list() {
  // @@protoc_insertion_point(field_mutable_list:agent.SvrAgentData.instance_list)
  return &instance_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::agent::Instance >&
SvrAgentData::instance_list() const {
  // @@protoc_insertion_point(field_list:agent.SvrAgentData.instance_list)
  return instance_list_;
}

// -------------------------------------------------------------------

// ExecuteCommandReq

// optional .agent.Instance instance = 1;
inline bool ExecuteCommandReq::has_instance() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExecuteCommandReq::set_has_instance() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExecuteCommandReq::clear_has_instance() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExecuteCommandReq::clear_instance() {
  if (instance_ != NULL) instance_->Clear();
  clear_has_instance();
}
inline const ::agent::Instance& ExecuteCommandReq::instance() const {
  const ::agent::Instance* p = instance_;
  // @@protoc_insertion_point(field_get:agent.ExecuteCommandReq.instance)
  return p != NULL ? *p : *reinterpret_cast<const ::agent::Instance*>(
      &::agent::_Instance_default_instance_);
}
inline ::agent::Instance* ExecuteCommandReq::release_instance() {
  // @@protoc_insertion_point(field_release:agent.ExecuteCommandReq.instance)
  clear_has_instance();
  ::agent::Instance* temp = instance_;
  instance_ = NULL;
  return temp;
}
inline ::agent::Instance* ExecuteCommandReq::mutable_instance() {
  set_has_instance();
  if (instance_ == NULL) {
    instance_ = new ::agent::Instance;
  }
  // @@protoc_insertion_point(field_mutable:agent.ExecuteCommandReq.instance)
  return instance_;
}
inline void ExecuteCommandReq::set_allocated_instance(::agent::Instance* instance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete instance_;
  }
  if (instance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instance, submessage_arena);
    }
    set_has_instance();
  } else {
    clear_has_instance();
  }
  instance_ = instance;
  // @@protoc_insertion_point(field_set_allocated:agent.ExecuteCommandReq.instance)
}

// optional string cur_cmd = 2;
inline bool ExecuteCommandReq::has_cur_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExecuteCommandReq::set_has_cur_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExecuteCommandReq::clear_has_cur_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExecuteCommandReq::clear_cur_cmd() {
  cur_cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cur_cmd();
}
inline const ::std::string& ExecuteCommandReq::cur_cmd() const {
  // @@protoc_insertion_point(field_get:agent.ExecuteCommandReq.cur_cmd)
  return cur_cmd_.GetNoArena();
}
inline void ExecuteCommandReq::set_cur_cmd(const ::std::string& value) {
  set_has_cur_cmd();
  cur_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent.ExecuteCommandReq.cur_cmd)
}
#if LANG_CXX11
inline void ExecuteCommandReq::set_cur_cmd(::std::string&& value) {
  set_has_cur_cmd();
  cur_cmd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:agent.ExecuteCommandReq.cur_cmd)
}
#endif
inline void ExecuteCommandReq::set_cur_cmd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cur_cmd();
  cur_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent.ExecuteCommandReq.cur_cmd)
}
inline void ExecuteCommandReq::set_cur_cmd(const char* value, size_t size) {
  set_has_cur_cmd();
  cur_cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent.ExecuteCommandReq.cur_cmd)
}
inline ::std::string* ExecuteCommandReq::mutable_cur_cmd() {
  set_has_cur_cmd();
  // @@protoc_insertion_point(field_mutable:agent.ExecuteCommandReq.cur_cmd)
  return cur_cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecuteCommandReq::release_cur_cmd() {
  // @@protoc_insertion_point(field_release:agent.ExecuteCommandReq.cur_cmd)
  clear_has_cur_cmd();
  return cur_cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecuteCommandReq::set_allocated_cur_cmd(::std::string* cur_cmd) {
  if (cur_cmd != NULL) {
    set_has_cur_cmd();
  } else {
    clear_has_cur_cmd();
  }
  cur_cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cur_cmd);
  // @@protoc_insertion_point(field_set_allocated:agent.ExecuteCommandReq.cur_cmd)
}

// -------------------------------------------------------------------

// ExecuteCommandRsp

// optional int32 ret = 1;
inline bool ExecuteCommandRsp::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExecuteCommandRsp::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExecuteCommandRsp::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExecuteCommandRsp::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 ExecuteCommandRsp::ret() const {
  // @@protoc_insertion_point(field_get:agent.ExecuteCommandRsp.ret)
  return ret_;
}
inline void ExecuteCommandRsp::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:agent.ExecuteCommandRsp.ret)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace agent

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::agent::CMD> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::agent::CMD>() {
  return ::agent::CMD_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fagent_5fdata_2eproto__INCLUDED
