// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_agent_conf.proto

#ifndef PROTOBUF_server_5fagent_5fconf_2eproto__INCLUDED
#define PROTOBUF_server_5fagent_5fconf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_server_5fagent_5fconf_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsAgentListenInfoImpl();
void InitDefaultsAgentListenInfo();
void InitDefaultsScriptInfoImpl();
void InitDefaultsScriptInfo();
void InitDefaultsServerAgentConfigImpl();
void InitDefaultsServerAgentConfig();
inline void InitDefaults() {
  InitDefaultsAgentListenInfo();
  InitDefaultsScriptInfo();
  InitDefaultsServerAgentConfig();
}
}  // namespace protobuf_server_5fagent_5fconf_2eproto
namespace config {
class AgentListenInfo;
class AgentListenInfoDefaultTypeInternal;
extern AgentListenInfoDefaultTypeInternal _AgentListenInfo_default_instance_;
class ScriptInfo;
class ScriptInfoDefaultTypeInternal;
extern ScriptInfoDefaultTypeInternal _ScriptInfo_default_instance_;
class ServerAgentConfig;
class ServerAgentConfigDefaultTypeInternal;
extern ServerAgentConfigDefaultTypeInternal _ServerAgentConfig_default_instance_;
}  // namespace config
namespace config {

enum ScriptType {
  E_SCRIPT_TYPE_CERTAIN_TIME = 1,
  E_SCRIPT_TYPE_PERIOD_TIME = 2
};
bool ScriptType_IsValid(int value);
const ScriptType ScriptType_MIN = E_SCRIPT_TYPE_CERTAIN_TIME;
const ScriptType ScriptType_MAX = E_SCRIPT_TYPE_PERIOD_TIME;
const int ScriptType_ARRAYSIZE = ScriptType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ScriptType_descriptor();
inline const ::std::string& ScriptType_Name(ScriptType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ScriptType_descriptor(), value);
}
inline bool ScriptType_Parse(
    const ::std::string& name, ScriptType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScriptType>(
    ScriptType_descriptor(), name, value);
}
// ===================================================================

class AgentListenInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:config.AgentListenInfo) */ {
 public:
  AgentListenInfo();
  virtual ~AgentListenInfo();

  AgentListenInfo(const AgentListenInfo& from);

  inline AgentListenInfo& operator=(const AgentListenInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AgentListenInfo(AgentListenInfo&& from) noexcept
    : AgentListenInfo() {
    *this = ::std::move(from);
  }

  inline AgentListenInfo& operator=(AgentListenInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AgentListenInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AgentListenInfo* internal_default_instance() {
    return reinterpret_cast<const AgentListenInfo*>(
               &_AgentListenInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(AgentListenInfo* other);
  friend void swap(AgentListenInfo& a, AgentListenInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AgentListenInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  AgentListenInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AgentListenInfo& from);
  void MergeFrom(const AgentListenInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AgentListenInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string listen_ip = 1;
  bool has_listen_ip() const;
  void clear_listen_ip();
  static const int kListenIpFieldNumber = 1;
  const ::std::string& listen_ip() const;
  void set_listen_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_listen_ip(::std::string&& value);
  #endif
  void set_listen_ip(const char* value);
  void set_listen_ip(const char* value, size_t size);
  ::std::string* mutable_listen_ip();
  ::std::string* release_listen_ip();
  void set_allocated_listen_ip(::std::string* listen_ip);

  // optional int32 listen_port = 2;
  bool has_listen_port() const;
  void clear_listen_port();
  static const int kListenPortFieldNumber = 2;
  ::google::protobuf::int32 listen_port() const;
  void set_listen_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:config.AgentListenInfo)
 private:
  void set_has_listen_ip();
  void clear_has_listen_ip();
  void set_has_listen_port();
  void clear_has_listen_port();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr listen_ip_;
  ::google::protobuf::int32 listen_port_;
  friend struct ::protobuf_server_5fagent_5fconf_2eproto::TableStruct;
  friend void ::protobuf_server_5fagent_5fconf_2eproto::InitDefaultsAgentListenInfoImpl();
};
// -------------------------------------------------------------------

class ScriptInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:config.ScriptInfo) */ {
 public:
  ScriptInfo();
  virtual ~ScriptInfo();

  ScriptInfo(const ScriptInfo& from);

  inline ScriptInfo& operator=(const ScriptInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ScriptInfo(ScriptInfo&& from) noexcept
    : ScriptInfo() {
    *this = ::std::move(from);
  }

  inline ScriptInfo& operator=(ScriptInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScriptInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ScriptInfo* internal_default_instance() {
    return reinterpret_cast<const ScriptInfo*>(
               &_ScriptInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ScriptInfo* other);
  friend void swap(ScriptInfo& a, ScriptInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ScriptInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ScriptInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScriptInfo& from);
  void MergeFrom(const ScriptInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScriptInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string script = 2;
  bool has_script() const;
  void clear_script();
  static const int kScriptFieldNumber = 2;
  const ::std::string& script() const;
  void set_script(const ::std::string& value);
  #if LANG_CXX11
  void set_script(::std::string&& value);
  #endif
  void set_script(const char* value);
  void set_script(const char* value, size_t size);
  ::std::string* mutable_script();
  ::std::string* release_script();
  void set_allocated_script(::std::string* script);

  // optional string day_certain_time = 4;
  bool has_day_certain_time() const;
  void clear_day_certain_time();
  static const int kDayCertainTimeFieldNumber = 4;
  const ::std::string& day_certain_time() const;
  void set_day_certain_time(const ::std::string& value);
  #if LANG_CXX11
  void set_day_certain_time(::std::string&& value);
  #endif
  void set_day_certain_time(const char* value);
  void set_day_certain_time(const char* value, size_t size);
  ::std::string* mutable_day_certain_time();
  ::std::string* release_day_certain_time();
  void set_allocated_day_certain_time(::std::string* day_certain_time);

  // optional string script_dir = 6;
  bool has_script_dir() const;
  void clear_script_dir();
  static const int kScriptDirFieldNumber = 6;
  const ::std::string& script_dir() const;
  void set_script_dir(const ::std::string& value);
  #if LANG_CXX11
  void set_script_dir(::std::string&& value);
  #endif
  void set_script_dir(const char* value);
  void set_script_dir(const char* value, size_t size);
  ::std::string* mutable_script_dir();
  ::std::string* release_script_dir();
  void set_allocated_script_dir(::std::string* script_dir);

  // optional uint32 interval_seconds = 3;
  bool has_interval_seconds() const;
  void clear_interval_seconds();
  static const int kIntervalSecondsFieldNumber = 3;
  ::google::protobuf::uint32 interval_seconds() const;
  void set_interval_seconds(::google::protobuf::uint32 value);

  // optional uint32 next_check_time = 5;
  bool has_next_check_time() const;
  void clear_next_check_time();
  static const int kNextCheckTimeFieldNumber = 5;
  ::google::protobuf::uint32 next_check_time() const;
  void set_next_check_time(::google::protobuf::uint32 value);

  // optional .config.ScriptType type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::config::ScriptType type() const;
  void set_type(::config::ScriptType value);

  // @@protoc_insertion_point(class_scope:config.ScriptInfo)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_script();
  void clear_has_script();
  void set_has_interval_seconds();
  void clear_has_interval_seconds();
  void set_has_day_certain_time();
  void clear_has_day_certain_time();
  void set_has_next_check_time();
  void clear_has_next_check_time();
  void set_has_script_dir();
  void clear_has_script_dir();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr script_;
  ::google::protobuf::internal::ArenaStringPtr day_certain_time_;
  ::google::protobuf::internal::ArenaStringPtr script_dir_;
  ::google::protobuf::uint32 interval_seconds_;
  ::google::protobuf::uint32 next_check_time_;
  int type_;
  friend struct ::protobuf_server_5fagent_5fconf_2eproto::TableStruct;
  friend void ::protobuf_server_5fagent_5fconf_2eproto::InitDefaultsScriptInfoImpl();
};
// -------------------------------------------------------------------

class ServerAgentConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:config.ServerAgentConfig) */ {
 public:
  ServerAgentConfig();
  virtual ~ServerAgentConfig();

  ServerAgentConfig(const ServerAgentConfig& from);

  inline ServerAgentConfig& operator=(const ServerAgentConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerAgentConfig(ServerAgentConfig&& from) noexcept
    : ServerAgentConfig() {
    *this = ::std::move(from);
  }

  inline ServerAgentConfig& operator=(ServerAgentConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerAgentConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerAgentConfig* internal_default_instance() {
    return reinterpret_cast<const ServerAgentConfig*>(
               &_ServerAgentConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ServerAgentConfig* other);
  friend void swap(ServerAgentConfig& a, ServerAgentConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerAgentConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ServerAgentConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ServerAgentConfig& from);
  void MergeFrom(const ServerAgentConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ServerAgentConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .config.ScriptInfo script_info_list = 2;
  int script_info_list_size() const;
  void clear_script_info_list();
  static const int kScriptInfoListFieldNumber = 2;
  const ::config::ScriptInfo& script_info_list(int index) const;
  ::config::ScriptInfo* mutable_script_info_list(int index);
  ::config::ScriptInfo* add_script_info_list();
  ::google::protobuf::RepeatedPtrField< ::config::ScriptInfo >*
      mutable_script_info_list();
  const ::google::protobuf::RepeatedPtrField< ::config::ScriptInfo >&
      script_info_list() const;

  // optional .config.AgentListenInfo listen_info = 1;
  bool has_listen_info() const;
  void clear_listen_info();
  static const int kListenInfoFieldNumber = 1;
  const ::config::AgentListenInfo& listen_info() const;
  ::config::AgentListenInfo* release_listen_info();
  ::config::AgentListenInfo* mutable_listen_info();
  void set_allocated_listen_info(::config::AgentListenInfo* listen_info);

  // optional uint32 max_pullup_server_cnt = 3;
  bool has_max_pullup_server_cnt() const;
  void clear_max_pullup_server_cnt();
  static const int kMaxPullupServerCntFieldNumber = 3;
  ::google::protobuf::uint32 max_pullup_server_cnt() const;
  void set_max_pullup_server_cnt(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:config.ServerAgentConfig)
 private:
  void set_has_listen_info();
  void clear_has_listen_info();
  void set_has_max_pullup_server_cnt();
  void clear_has_max_pullup_server_cnt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::config::ScriptInfo > script_info_list_;
  ::config::AgentListenInfo* listen_info_;
  ::google::protobuf::uint32 max_pullup_server_cnt_;
  friend struct ::protobuf_server_5fagent_5fconf_2eproto::TableStruct;
  friend void ::protobuf_server_5fagent_5fconf_2eproto::InitDefaultsServerAgentConfigImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AgentListenInfo

// optional string listen_ip = 1;
inline bool AgentListenInfo::has_listen_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AgentListenInfo::set_has_listen_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AgentListenInfo::clear_has_listen_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AgentListenInfo::clear_listen_ip() {
  listen_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_listen_ip();
}
inline const ::std::string& AgentListenInfo::listen_ip() const {
  // @@protoc_insertion_point(field_get:config.AgentListenInfo.listen_ip)
  return listen_ip_.GetNoArena();
}
inline void AgentListenInfo::set_listen_ip(const ::std::string& value) {
  set_has_listen_ip();
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.AgentListenInfo.listen_ip)
}
#if LANG_CXX11
inline void AgentListenInfo::set_listen_ip(::std::string&& value) {
  set_has_listen_ip();
  listen_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:config.AgentListenInfo.listen_ip)
}
#endif
inline void AgentListenInfo::set_listen_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_listen_ip();
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.AgentListenInfo.listen_ip)
}
inline void AgentListenInfo::set_listen_ip(const char* value, size_t size) {
  set_has_listen_ip();
  listen_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.AgentListenInfo.listen_ip)
}
inline ::std::string* AgentListenInfo::mutable_listen_ip() {
  set_has_listen_ip();
  // @@protoc_insertion_point(field_mutable:config.AgentListenInfo.listen_ip)
  return listen_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AgentListenInfo::release_listen_ip() {
  // @@protoc_insertion_point(field_release:config.AgentListenInfo.listen_ip)
  clear_has_listen_ip();
  return listen_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AgentListenInfo::set_allocated_listen_ip(::std::string* listen_ip) {
  if (listen_ip != NULL) {
    set_has_listen_ip();
  } else {
    clear_has_listen_ip();
  }
  listen_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listen_ip);
  // @@protoc_insertion_point(field_set_allocated:config.AgentListenInfo.listen_ip)
}

// optional int32 listen_port = 2;
inline bool AgentListenInfo::has_listen_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AgentListenInfo::set_has_listen_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AgentListenInfo::clear_has_listen_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AgentListenInfo::clear_listen_port() {
  listen_port_ = 0;
  clear_has_listen_port();
}
inline ::google::protobuf::int32 AgentListenInfo::listen_port() const {
  // @@protoc_insertion_point(field_get:config.AgentListenInfo.listen_port)
  return listen_port_;
}
inline void AgentListenInfo::set_listen_port(::google::protobuf::int32 value) {
  set_has_listen_port();
  listen_port_ = value;
  // @@protoc_insertion_point(field_set:config.AgentListenInfo.listen_port)
}

// -------------------------------------------------------------------

// ScriptInfo

// optional .config.ScriptType type = 1;
inline bool ScriptInfo::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ScriptInfo::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ScriptInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ScriptInfo::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::config::ScriptType ScriptInfo::type() const {
  // @@protoc_insertion_point(field_get:config.ScriptInfo.type)
  return static_cast< ::config::ScriptType >(type_);
}
inline void ScriptInfo::set_type(::config::ScriptType value) {
  assert(::config::ScriptType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:config.ScriptInfo.type)
}

// optional string script = 2;
inline bool ScriptInfo::has_script() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScriptInfo::set_has_script() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScriptInfo::clear_has_script() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScriptInfo::clear_script() {
  script_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_script();
}
inline const ::std::string& ScriptInfo::script() const {
  // @@protoc_insertion_point(field_get:config.ScriptInfo.script)
  return script_.GetNoArena();
}
inline void ScriptInfo::set_script(const ::std::string& value) {
  set_has_script();
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.ScriptInfo.script)
}
#if LANG_CXX11
inline void ScriptInfo::set_script(::std::string&& value) {
  set_has_script();
  script_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:config.ScriptInfo.script)
}
#endif
inline void ScriptInfo::set_script(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_script();
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.ScriptInfo.script)
}
inline void ScriptInfo::set_script(const char* value, size_t size) {
  set_has_script();
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.ScriptInfo.script)
}
inline ::std::string* ScriptInfo::mutable_script() {
  set_has_script();
  // @@protoc_insertion_point(field_mutable:config.ScriptInfo.script)
  return script_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScriptInfo::release_script() {
  // @@protoc_insertion_point(field_release:config.ScriptInfo.script)
  clear_has_script();
  return script_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScriptInfo::set_allocated_script(::std::string* script) {
  if (script != NULL) {
    set_has_script();
  } else {
    clear_has_script();
  }
  script_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script);
  // @@protoc_insertion_point(field_set_allocated:config.ScriptInfo.script)
}

// optional uint32 interval_seconds = 3;
inline bool ScriptInfo::has_interval_seconds() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ScriptInfo::set_has_interval_seconds() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ScriptInfo::clear_has_interval_seconds() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ScriptInfo::clear_interval_seconds() {
  interval_seconds_ = 0u;
  clear_has_interval_seconds();
}
inline ::google::protobuf::uint32 ScriptInfo::interval_seconds() const {
  // @@protoc_insertion_point(field_get:config.ScriptInfo.interval_seconds)
  return interval_seconds_;
}
inline void ScriptInfo::set_interval_seconds(::google::protobuf::uint32 value) {
  set_has_interval_seconds();
  interval_seconds_ = value;
  // @@protoc_insertion_point(field_set:config.ScriptInfo.interval_seconds)
}

// optional string day_certain_time = 4;
inline bool ScriptInfo::has_day_certain_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ScriptInfo::set_has_day_certain_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ScriptInfo::clear_has_day_certain_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ScriptInfo::clear_day_certain_time() {
  day_certain_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_day_certain_time();
}
inline const ::std::string& ScriptInfo::day_certain_time() const {
  // @@protoc_insertion_point(field_get:config.ScriptInfo.day_certain_time)
  return day_certain_time_.GetNoArena();
}
inline void ScriptInfo::set_day_certain_time(const ::std::string& value) {
  set_has_day_certain_time();
  day_certain_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.ScriptInfo.day_certain_time)
}
#if LANG_CXX11
inline void ScriptInfo::set_day_certain_time(::std::string&& value) {
  set_has_day_certain_time();
  day_certain_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:config.ScriptInfo.day_certain_time)
}
#endif
inline void ScriptInfo::set_day_certain_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_day_certain_time();
  day_certain_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.ScriptInfo.day_certain_time)
}
inline void ScriptInfo::set_day_certain_time(const char* value, size_t size) {
  set_has_day_certain_time();
  day_certain_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.ScriptInfo.day_certain_time)
}
inline ::std::string* ScriptInfo::mutable_day_certain_time() {
  set_has_day_certain_time();
  // @@protoc_insertion_point(field_mutable:config.ScriptInfo.day_certain_time)
  return day_certain_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScriptInfo::release_day_certain_time() {
  // @@protoc_insertion_point(field_release:config.ScriptInfo.day_certain_time)
  clear_has_day_certain_time();
  return day_certain_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScriptInfo::set_allocated_day_certain_time(::std::string* day_certain_time) {
  if (day_certain_time != NULL) {
    set_has_day_certain_time();
  } else {
    clear_has_day_certain_time();
  }
  day_certain_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), day_certain_time);
  // @@protoc_insertion_point(field_set_allocated:config.ScriptInfo.day_certain_time)
}

// optional uint32 next_check_time = 5;
inline bool ScriptInfo::has_next_check_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ScriptInfo::set_has_next_check_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ScriptInfo::clear_has_next_check_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ScriptInfo::clear_next_check_time() {
  next_check_time_ = 0u;
  clear_has_next_check_time();
}
inline ::google::protobuf::uint32 ScriptInfo::next_check_time() const {
  // @@protoc_insertion_point(field_get:config.ScriptInfo.next_check_time)
  return next_check_time_;
}
inline void ScriptInfo::set_next_check_time(::google::protobuf::uint32 value) {
  set_has_next_check_time();
  next_check_time_ = value;
  // @@protoc_insertion_point(field_set:config.ScriptInfo.next_check_time)
}

// optional string script_dir = 6;
inline bool ScriptInfo::has_script_dir() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ScriptInfo::set_has_script_dir() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ScriptInfo::clear_has_script_dir() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ScriptInfo::clear_script_dir() {
  script_dir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_script_dir();
}
inline const ::std::string& ScriptInfo::script_dir() const {
  // @@protoc_insertion_point(field_get:config.ScriptInfo.script_dir)
  return script_dir_.GetNoArena();
}
inline void ScriptInfo::set_script_dir(const ::std::string& value) {
  set_has_script_dir();
  script_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.ScriptInfo.script_dir)
}
#if LANG_CXX11
inline void ScriptInfo::set_script_dir(::std::string&& value) {
  set_has_script_dir();
  script_dir_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:config.ScriptInfo.script_dir)
}
#endif
inline void ScriptInfo::set_script_dir(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_script_dir();
  script_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.ScriptInfo.script_dir)
}
inline void ScriptInfo::set_script_dir(const char* value, size_t size) {
  set_has_script_dir();
  script_dir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.ScriptInfo.script_dir)
}
inline ::std::string* ScriptInfo::mutable_script_dir() {
  set_has_script_dir();
  // @@protoc_insertion_point(field_mutable:config.ScriptInfo.script_dir)
  return script_dir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ScriptInfo::release_script_dir() {
  // @@protoc_insertion_point(field_release:config.ScriptInfo.script_dir)
  clear_has_script_dir();
  return script_dir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ScriptInfo::set_allocated_script_dir(::std::string* script_dir) {
  if (script_dir != NULL) {
    set_has_script_dir();
  } else {
    clear_has_script_dir();
  }
  script_dir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script_dir);
  // @@protoc_insertion_point(field_set_allocated:config.ScriptInfo.script_dir)
}

// -------------------------------------------------------------------

// ServerAgentConfig

// optional .config.AgentListenInfo listen_info = 1;
inline bool ServerAgentConfig::has_listen_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ServerAgentConfig::set_has_listen_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ServerAgentConfig::clear_has_listen_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ServerAgentConfig::clear_listen_info() {
  if (listen_info_ != NULL) listen_info_->Clear();
  clear_has_listen_info();
}
inline const ::config::AgentListenInfo& ServerAgentConfig::listen_info() const {
  const ::config::AgentListenInfo* p = listen_info_;
  // @@protoc_insertion_point(field_get:config.ServerAgentConfig.listen_info)
  return p != NULL ? *p : *reinterpret_cast<const ::config::AgentListenInfo*>(
      &::config::_AgentListenInfo_default_instance_);
}
inline ::config::AgentListenInfo* ServerAgentConfig::release_listen_info() {
  // @@protoc_insertion_point(field_release:config.ServerAgentConfig.listen_info)
  clear_has_listen_info();
  ::config::AgentListenInfo* temp = listen_info_;
  listen_info_ = NULL;
  return temp;
}
inline ::config::AgentListenInfo* ServerAgentConfig::mutable_listen_info() {
  set_has_listen_info();
  if (listen_info_ == NULL) {
    listen_info_ = new ::config::AgentListenInfo;
  }
  // @@protoc_insertion_point(field_mutable:config.ServerAgentConfig.listen_info)
  return listen_info_;
}
inline void ServerAgentConfig::set_allocated_listen_info(::config::AgentListenInfo* listen_info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete listen_info_;
  }
  if (listen_info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      listen_info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, listen_info, submessage_arena);
    }
    set_has_listen_info();
  } else {
    clear_has_listen_info();
  }
  listen_info_ = listen_info;
  // @@protoc_insertion_point(field_set_allocated:config.ServerAgentConfig.listen_info)
}

// repeated .config.ScriptInfo script_info_list = 2;
inline int ServerAgentConfig::script_info_list_size() const {
  return script_info_list_.size();
}
inline void ServerAgentConfig::clear_script_info_list() {
  script_info_list_.Clear();
}
inline const ::config::ScriptInfo& ServerAgentConfig::script_info_list(int index) const {
  // @@protoc_insertion_point(field_get:config.ServerAgentConfig.script_info_list)
  return script_info_list_.Get(index);
}
inline ::config::ScriptInfo* ServerAgentConfig::mutable_script_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:config.ServerAgentConfig.script_info_list)
  return script_info_list_.Mutable(index);
}
inline ::config::ScriptInfo* ServerAgentConfig::add_script_info_list() {
  // @@protoc_insertion_point(field_add:config.ServerAgentConfig.script_info_list)
  return script_info_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::config::ScriptInfo >*
ServerAgentConfig::mutable_script_info_list() {
  // @@protoc_insertion_point(field_mutable_list:config.ServerAgentConfig.script_info_list)
  return &script_info_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::config::ScriptInfo >&
ServerAgentConfig::script_info_list() const {
  // @@protoc_insertion_point(field_list:config.ServerAgentConfig.script_info_list)
  return script_info_list_;
}

// optional uint32 max_pullup_server_cnt = 3;
inline bool ServerAgentConfig::has_max_pullup_server_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ServerAgentConfig::set_has_max_pullup_server_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ServerAgentConfig::clear_has_max_pullup_server_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ServerAgentConfig::clear_max_pullup_server_cnt() {
  max_pullup_server_cnt_ = 0u;
  clear_has_max_pullup_server_cnt();
}
inline ::google::protobuf::uint32 ServerAgentConfig::max_pullup_server_cnt() const {
  // @@protoc_insertion_point(field_get:config.ServerAgentConfig.max_pullup_server_cnt)
  return max_pullup_server_cnt_;
}
inline void ServerAgentConfig::set_max_pullup_server_cnt(::google::protobuf::uint32 value) {
  set_has_max_pullup_server_cnt();
  max_pullup_server_cnt_ = value;
  // @@protoc_insertion_point(field_set:config.ServerAgentConfig.max_pullup_server_cnt)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace config

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::config::ScriptType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::config::ScriptType>() {
  return ::config::ScriptType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_server_5fagent_5fconf_2eproto__INCLUDED
