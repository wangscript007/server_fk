// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dataconfig_x_zone_conf.proto

#include "dataconfig_x_zone_conf.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace dataconfig {
class x_zone_confDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<x_zone_conf>
      _instance;
} _x_zone_conf_default_instance_;
class x_zone_conf_arrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<x_zone_conf_array>
      _instance;
} _x_zone_conf_array_default_instance_;
}  // namespace dataconfig
namespace protobuf_dataconfig_5fx_5fzone_5fconf_2eproto {
void InitDefaultsx_zone_confImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::dataconfig::_x_zone_conf_default_instance_;
    new (ptr) ::dataconfig::x_zone_conf();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dataconfig::x_zone_conf::InitAsDefaultInstance();
}

void InitDefaultsx_zone_conf() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsx_zone_confImpl);
}

void InitDefaultsx_zone_conf_arrayImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_dataconfig_5fx_5fzone_5fconf_2eproto::InitDefaultsx_zone_conf();
  {
    void* ptr = &::dataconfig::_x_zone_conf_array_default_instance_;
    new (ptr) ::dataconfig::x_zone_conf_array();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::dataconfig::x_zone_conf_array::InitAsDefaultInstance();
}

void InitDefaultsx_zone_conf_array() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsx_zone_conf_arrayImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dataconfig::x_zone_conf, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dataconfig::x_zone_conf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dataconfig::x_zone_conf, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dataconfig::x_zone_conf, location_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dataconfig::x_zone_conf, zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dataconfig::x_zone_conf, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dataconfig::x_zone_conf, desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dataconfig::x_zone_conf, is_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dataconfig::x_zone_conf, backup_),
  2,
  0,
  3,
  4,
  1,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dataconfig::x_zone_conf_array, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dataconfig::x_zone_conf_array, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::dataconfig::x_zone_conf_array, items_),
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::dataconfig::x_zone_conf)},
  { 19, 25, sizeof(::dataconfig::x_zone_conf_array)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::dataconfig::_x_zone_conf_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::dataconfig::_x_zone_conf_array_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "dataconfig_x_zone_conf.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034dataconfig_x_zone_conf.proto\022\ndataconf"
      "ig\"\216\001\n\013x_zone_conf\022\r\n\002id\030\001 \001(\005:\0010\022\027\n\rloc"
      "ation_desc\030\002 \001(\t:\000\022\017\n\004zone\030\003 \001(\005:\0010\022\017\n\004n"
      "ame\030\004 \001(\005:\0010\022\016\n\004desc\030\005 \001(\t:\000\022\022\n\007is_open\030"
      "\006 \001(\005:\0010\022\021\n\006backup\030\007 \001(\005:\0010\";\n\021x_zone_co"
      "nf_array\022&\n\005items\030\001 \003(\0132\027.dataconfig.x_z"
      "one_conf"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 248);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dataconfig_x_zone_conf.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_dataconfig_5fx_5fzone_5fconf_2eproto
namespace dataconfig {

// ===================================================================

void x_zone_conf::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int x_zone_conf::kIdFieldNumber;
const int x_zone_conf::kLocationDescFieldNumber;
const int x_zone_conf::kZoneFieldNumber;
const int x_zone_conf::kNameFieldNumber;
const int x_zone_conf::kDescFieldNumber;
const int x_zone_conf::kIsOpenFieldNumber;
const int x_zone_conf::kBackupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

x_zone_conf::x_zone_conf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dataconfig_5fx_5fzone_5fconf_2eproto::InitDefaultsx_zone_conf();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:dataconfig.x_zone_conf)
}
x_zone_conf::x_zone_conf(const x_zone_conf& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  location_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_location_desc()) {
    location_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_desc_);
  }
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_desc()) {
    desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&backup_) -
    reinterpret_cast<char*>(&id_)) + sizeof(backup_));
  // @@protoc_insertion_point(copy_constructor:dataconfig.x_zone_conf)
}

void x_zone_conf::SharedCtor() {
  _cached_size_ = 0;
  location_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&backup_) -
      reinterpret_cast<char*>(&id_)) + sizeof(backup_));
}

x_zone_conf::~x_zone_conf() {
  // @@protoc_insertion_point(destructor:dataconfig.x_zone_conf)
  SharedDtor();
}

void x_zone_conf::SharedDtor() {
  location_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void x_zone_conf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* x_zone_conf::descriptor() {
  ::protobuf_dataconfig_5fx_5fzone_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataconfig_5fx_5fzone_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const x_zone_conf& x_zone_conf::default_instance() {
  ::protobuf_dataconfig_5fx_5fzone_5fconf_2eproto::InitDefaultsx_zone_conf();
  return *internal_default_instance();
}

x_zone_conf* x_zone_conf::New(::google::protobuf::Arena* arena) const {
  x_zone_conf* n = new x_zone_conf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void x_zone_conf::Clear() {
// @@protoc_insertion_point(message_clear_start:dataconfig.x_zone_conf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!location_desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*location_desc_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*desc_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 124u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&backup_) -
        reinterpret_cast<char*>(&id_)) + sizeof(backup_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool x_zone_conf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dataconfig.x_zone_conf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1 [default = 0];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string location_desc = 2 [default = ""];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_location_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->location_desc().data(), static_cast<int>(this->location_desc().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dataconfig.x_zone_conf.location_desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 zone = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          set_has_zone();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &zone_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 name = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          set_has_name();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &name_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string desc = 5 [default = ""];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->desc().data(), static_cast<int>(this->desc().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "dataconfig.x_zone_conf.desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 is_open = 6 [default = 0];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          set_has_is_open();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 backup = 7 [default = 0];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_backup();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &backup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dataconfig.x_zone_conf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dataconfig.x_zone_conf)
  return false;
#undef DO_
}

void x_zone_conf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dataconfig.x_zone_conf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional string location_desc = 2 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location_desc().data(), static_cast<int>(this->location_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dataconfig.x_zone_conf.location_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->location_desc(), output);
  }

  // optional int32 zone = 3 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->zone(), output);
  }

  // optional int32 name = 4 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->name(), output);
  }

  // optional string desc = 5 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dataconfig.x_zone_conf.desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->desc(), output);
  }

  // optional int32 is_open = 6 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->is_open(), output);
  }

  // optional int32 backup = 7 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->backup(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dataconfig.x_zone_conf)
}

::google::protobuf::uint8* x_zone_conf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dataconfig.x_zone_conf)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 id = 1 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional string location_desc = 2 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->location_desc().data(), static_cast<int>(this->location_desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dataconfig.x_zone_conf.location_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->location_desc(), target);
  }

  // optional int32 zone = 3 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->zone(), target);
  }

  // optional int32 name = 4 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->name(), target);
  }

  // optional string desc = 5 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->desc().data(), static_cast<int>(this->desc().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "dataconfig.x_zone_conf.desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->desc(), target);
  }

  // optional int32 is_open = 6 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->is_open(), target);
  }

  // optional int32 backup = 7 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->backup(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataconfig.x_zone_conf)
  return target;
}

size_t x_zone_conf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataconfig.x_zone_conf)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string location_desc = 2 [default = ""];
    if (has_location_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->location_desc());
    }

    // optional string desc = 5 [default = ""];
    if (has_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->desc());
    }

    // optional int32 id = 1 [default = 0];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional int32 zone = 3 [default = 0];
    if (has_zone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->zone());
    }

    // optional int32 name = 4 [default = 0];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->name());
    }

    // optional int32 is_open = 6 [default = 0];
    if (has_is_open()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->is_open());
    }

    // optional int32 backup = 7 [default = 0];
    if (has_backup()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->backup());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void x_zone_conf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dataconfig.x_zone_conf)
  GOOGLE_DCHECK_NE(&from, this);
  const x_zone_conf* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const x_zone_conf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dataconfig.x_zone_conf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dataconfig.x_zone_conf)
    MergeFrom(*source);
  }
}

void x_zone_conf::MergeFrom(const x_zone_conf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dataconfig.x_zone_conf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_location_desc();
      location_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.location_desc_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_desc();
      desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.desc_);
    }
    if (cached_has_bits & 0x00000004u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000008u) {
      zone_ = from.zone_;
    }
    if (cached_has_bits & 0x00000010u) {
      name_ = from.name_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_open_ = from.is_open_;
    }
    if (cached_has_bits & 0x00000040u) {
      backup_ = from.backup_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void x_zone_conf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dataconfig.x_zone_conf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void x_zone_conf::CopyFrom(const x_zone_conf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataconfig.x_zone_conf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool x_zone_conf::IsInitialized() const {
  return true;
}

void x_zone_conf::Swap(x_zone_conf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void x_zone_conf::InternalSwap(x_zone_conf* other) {
  using std::swap;
  location_desc_.Swap(&other->location_desc_);
  desc_.Swap(&other->desc_);
  swap(id_, other->id_);
  swap(zone_, other->zone_);
  swap(name_, other->name_);
  swap(is_open_, other->is_open_);
  swap(backup_, other->backup_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata x_zone_conf::GetMetadata() const {
  protobuf_dataconfig_5fx_5fzone_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataconfig_5fx_5fzone_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void x_zone_conf_array::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int x_zone_conf_array::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

x_zone_conf_array::x_zone_conf_array()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_dataconfig_5fx_5fzone_5fconf_2eproto::InitDefaultsx_zone_conf_array();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:dataconfig.x_zone_conf_array)
}
x_zone_conf_array::x_zone_conf_array(const x_zone_conf_array& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dataconfig.x_zone_conf_array)
}

void x_zone_conf_array::SharedCtor() {
  _cached_size_ = 0;
}

x_zone_conf_array::~x_zone_conf_array() {
  // @@protoc_insertion_point(destructor:dataconfig.x_zone_conf_array)
  SharedDtor();
}

void x_zone_conf_array::SharedDtor() {
}

void x_zone_conf_array::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* x_zone_conf_array::descriptor() {
  ::protobuf_dataconfig_5fx_5fzone_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataconfig_5fx_5fzone_5fconf_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const x_zone_conf_array& x_zone_conf_array::default_instance() {
  ::protobuf_dataconfig_5fx_5fzone_5fconf_2eproto::InitDefaultsx_zone_conf_array();
  return *internal_default_instance();
}

x_zone_conf_array* x_zone_conf_array::New(::google::protobuf::Arena* arena) const {
  x_zone_conf_array* n = new x_zone_conf_array;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void x_zone_conf_array::Clear() {
// @@protoc_insertion_point(message_clear_start:dataconfig.x_zone_conf_array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  items_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool x_zone_conf_array::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dataconfig.x_zone_conf_array)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dataconfig.x_zone_conf items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dataconfig.x_zone_conf_array)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dataconfig.x_zone_conf_array)
  return false;
#undef DO_
}

void x_zone_conf_array::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dataconfig.x_zone_conf_array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dataconfig.x_zone_conf items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dataconfig.x_zone_conf_array)
}

::google::protobuf::uint8* x_zone_conf_array::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:dataconfig.x_zone_conf_array)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dataconfig.x_zone_conf items = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->items_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->items(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dataconfig.x_zone_conf_array)
  return target;
}

size_t x_zone_conf_array::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dataconfig.x_zone_conf_array)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated .dataconfig.x_zone_conf items = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->items_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->items(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void x_zone_conf_array::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:dataconfig.x_zone_conf_array)
  GOOGLE_DCHECK_NE(&from, this);
  const x_zone_conf_array* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const x_zone_conf_array>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:dataconfig.x_zone_conf_array)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:dataconfig.x_zone_conf_array)
    MergeFrom(*source);
  }
}

void x_zone_conf_array::MergeFrom(const x_zone_conf_array& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:dataconfig.x_zone_conf_array)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
}

void x_zone_conf_array::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:dataconfig.x_zone_conf_array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void x_zone_conf_array::CopyFrom(const x_zone_conf_array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dataconfig.x_zone_conf_array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool x_zone_conf_array::IsInitialized() const {
  return true;
}

void x_zone_conf_array::Swap(x_zone_conf_array* other) {
  if (other == this) return;
  InternalSwap(other);
}
void x_zone_conf_array::InternalSwap(x_zone_conf_array* other) {
  using std::swap;
  items_.InternalSwap(&other->items_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata x_zone_conf_array::GetMetadata() const {
  protobuf_dataconfig_5fx_5fzone_5fconf_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_dataconfig_5fx_5fzone_5fconf_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace dataconfig

// @@protoc_insertion_point(global_scope)
