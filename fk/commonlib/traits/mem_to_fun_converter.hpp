#ifndef MEM_TO_FUN_CONVERTER_INCLUDE
#define MEM_TO_FUN_CONVERTER_INCLUDE

/*@brief:
	换成员函数指针类型转为普通函数类型*/

#include "commonlib/traits/mfunction_traits.hpp"


template<int Arity,typename Function> struct mem_to_fun_converter_helper;

template<int Arity,typename Signature, typename TClass>
struct fun_to_mem_converter_helper;

#define MEM_TO_FUN_COVERTER_HELPER_STRUCT(n) \
	template<typename Signature> \
struct mem_to_fun_converter_helper<n,Signature>

#define MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(n) \
	typedef mfunction_traits<Signature> traits; \
	typedef  FUNCTION_POINTER(typename traits::result_type,FunctionP_Type,typename traits::arg,n); \
	typedef typename traits::result_type(Function_Type)(AUTO_REPEAT(,typename traits::arg,n));


MEM_TO_FUN_COVERTER_HELPER_STRUCT(0)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(0)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(1)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(1)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(2)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(2)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(3)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(3)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(4)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(4)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(5)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(5)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(6)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(6)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(7)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(7)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(8)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(8)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(9)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(9)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(10)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(10)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(11)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(11)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(12)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(12)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(13)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(13)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(14)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(14)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(15)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(15)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(16)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(16)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(17)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(17)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(18)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(18)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(19)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(19)
};

MEM_TO_FUN_COVERTER_HELPER_STRUCT(20)
{
	MEM_TO_FUN_COVERTER_HELPER_STRUCT_POINTERTYPE(20)
};


template<typename MFunctionP_Type>
struct mem_to_fun_converter
{
	typedef typename mem_to_fun_converter_helper<mfunction_traits<MFunctionP_Type>::arity,MFunctionP_Type>::FunctionP_Type FunctionP_Type;
	typedef typename mem_to_fun_converter_helper<mfunction_traits<MFunctionP_Type>::arity,MFunctionP_Type>::Function_Type Function_Type;
};

#endif